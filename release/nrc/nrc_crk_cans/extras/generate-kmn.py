#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

# Copyright © 2019 Eddie Antonio Santos <Eddie.Santos@nrc-cnrc.gc.ca>
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

"""
Generates the .kmn keyboard code for to make the touch layout work properly.
"""

import sys

from libkeyboard.ioutils import setup_output
from libkeyboard.plains_cree_constants import COMBINING_CONSONANTS, VOWELS
from libkeyboard.syllabics import SYLLABICS


setup_output()

# The version number:
# Initial release is 1.0.0
version = f"1.0.0"

PREAMBLE = f"""
c AUTOGENERATED FILE - DO NOT MODIFY!
store(&VERSION) '10.0'
store(&TARGETS) 'mobile'
store(&NAME) 'Plains Cree Syllabics Keyboard'
store(&COPYRIGHT) 'Copyright © 2019 National Research Council Canada'
store(&KEYBOARDVERSION) '{version}'
store(&LAYOUTFILE) 'nrc_crk_cans.keyman-touch-layout'

begin Unicode > use(main)
group(main) using keys
""".strip()


print(PREAMBLE)

# Generate rules that replace a final and a vowel with the composed syllabic
#    U+XXXX + [U_YYYY] > U+YYYY layer('default')
#   e.g. when [ ᐘ ] has been pressed following a ᐤ, insert ᐘ and switch to 'default' layer.
for sro, syllabic in SYLLABICS.items():
    if not sro.endswith((*VOWELS,)):
        continue
    if not sro.startswith((*COMBINING_CONSONANTS, "w")):
        continue

    final = SYLLABICS[sro[0]]
    keycode = syllabic.as_keycode
    composed_syllable = syllabic.as_character

    if len(sro) == 2:
        w = ""
        context = final.as_character
    else:
        assert len(sro) == 3 and sro[1] == "w"
        w = " ᐤ"
        context = f"{final.as_character} {SYLLABICS['w'].as_character}"

    print(f"  {context} + [{keycode}] > {composed_syllable} layer('default')", end=" ")
    print(f"c {final}{w} + [ {syllabic} ] > {syllabic}")
